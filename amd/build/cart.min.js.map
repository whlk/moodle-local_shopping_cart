{"version":3,"file":"cart.min.js","sources":["../src/cart.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/*\r\n * @package    local_shopping_cart\r\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Ajax from 'core/ajax';\r\nimport Templates from 'core/templates';\r\nimport Notification from 'core/notification';\r\n\r\nimport ModalFactory from 'core/modal_factory';\r\nimport ModalEvents from 'core/modal_events';\r\n\r\nimport {confirmPayment} from 'local_shopping_cart/cachier';\r\n\r\nimport {\r\n    get_strings as getStrings\r\n        }\r\n        from 'core/str';\r\n\r\nexport var countdownelement = null;\r\nexport var interval = null;\r\nexport var visbilityevent = false;\r\n\r\nexport const reloadAllButtons = () => {\r\n    const addtocartbuttons = document.querySelectorAll('[id^=btn-]');\r\n    addtocartbuttons.forEach(button => {\r\n        button.classList.remove('disabled');\r\n    });\r\n};\r\n\r\nexport const buttoninit = (id, component) => {\r\n\r\n    // If there is no id, we browse the whole document and init all buttons individually.\r\n    if (!id) {\r\n\r\n        const buttons = document.querySelectorAll(\"[id^='btn-\" + component + \"']\");\r\n\r\n        buttons.forEach(button => {\r\n            // We have to get only the last part of the id, the number.\r\n            const number = button.id.split(/[\\s-]+/).pop();\r\n            buttoninit(number, component);\r\n        });\r\n        return;\r\n    }\r\n\r\n    // First we get the button and delete the helper-span to secure js loading.\r\n    const addtocartbutton = document.querySelector('#btn-' + component + '-' + id);\r\n\r\n    // If we don't find the button, we abort.\r\n    if (!addtocartbutton\r\n        || addtocartbutton.dataset.initialized) {\r\n        return;\r\n    }\r\n\r\n    // Make sure item is not yet in shopping cart. If so, add disabled class.\r\n\r\n\r\n    let shoppingcart = document.querySelector('#shopping_cart-cashiers-cart');\r\n\r\n    if (!shoppingcart) {\r\n        shoppingcart = document.querySelector('#nav-shopping_cart-popover-container');\r\n    }\r\n\r\n    if (shoppingcart) {\r\n        const cartitem = shoppingcart.querySelector('#item-' + component + '-' + id);\r\n        if (cartitem) {\r\n            addtocartbutton.classList.add('disabled');\r\n        }\r\n    }\r\n    // Add click eventlistern to oneself.\r\n    addtocartbutton.addEventListener('click', event => {\r\n\r\n         // eslint-disable-next-line no-console\r\n         console.log('button clicked', id);\r\n\r\n        // If we find the disabled class, the click event is aborted.\r\n        if (addtocartbutton.classList.contains('disabled')) {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        addItem(id, component);\r\n    });\r\n\r\n    addtocartbutton.dataset.initialized = true;\r\n};\r\n\r\n/**\r\n *\r\n * @param {*} expirationdate\r\n */\r\n\r\n export const init = (expirationdate) => {\r\n    countdownelement = document.querySelector('.expirationdate');\r\n    initTimer(expirationdate);\r\n    if (visbilityevent == false) {\r\n        let items = document.querySelectorAll('[id^=item-] .fa-trash-o');\r\n        items.forEach(item => {\r\n            addDeleteevent(item);\r\n        });\r\n        document.addEventListener(\"visibilitychange\", function() {\r\n            visbilityevent = true;\r\n            if (document.visibilityState === 'visible') {\r\n                reinit();\r\n            }\r\n        });\r\n    }\r\n    updateTotalPrice();\r\n};\r\n\r\nexport const reinit = () => {\r\n    reloadAllButtons();\r\n    Ajax.call([{\r\n        methodname: \"local_shopping_cart_get_shopping_cart_items\",\r\n        args: {\r\n        },\r\n        done: function(data) {\r\n            Templates.renderForPromise('local_shopping_cart/shopping_cart_items', data).then(({html}) => {\r\n                document.querySelector('.shopping-cart-items').remove();\r\n                let container = document.querySelector('#nav-shopping_cart-popover-container .shopping-cart-items-container');\r\n                container.insertAdjacentHTML('afterbegin', html);\r\n                data.items.forEach(item => {\r\n                    buttoninit(item.itemid, item.itemcomponent);\r\n                });\r\n                let deleteaction = document.querySelectorAll('.fa-trash-o');\r\n                deleteaction.forEach(item => {\r\n                    addDeleteevent(item);\r\n                });\r\n                let itemcount = document.getElementById(\"itemcount\");\r\n                itemcount.innerHTML = data.count;\r\n                document.getElementById(\"countbadge\").innerHTML = data.count;\r\n                if (data.count > 0) {\r\n                    itemcount.classList.remove(\"hidden\");\r\n                } else {\r\n                    itemcount.classList.add(\"hidden\");\r\n                }\r\n                initTimer(data.expirationdate);\r\n\r\n                return true;\r\n            }).catch((e) => {\r\n                // eslint-disable-next-line no-console\r\n                console.log(e);\r\n            });\r\n        },\r\n        fail: function(ex) {\r\n            // eslint-disable-next-line no-console\r\n            console.log(\"ex:\" + ex);\r\n        },\r\n    }]);\r\n};\r\n\r\nexport const deleteAllItems = () => {\r\n    Ajax.call([{\r\n        methodname: \"local_shopping_cart_delete_all_items_from_cart\",\r\n        args: {\r\n        },\r\n        done: function() {\r\n            let item = document.querySelectorAll('[id^=item-]');\r\n            item.forEach(item => {\r\n                if (item) {\r\n                    item.remove();\r\n                }\r\n            });\r\n\r\n            updateTotalPrice();\r\n\r\n            let itemcount1 = document.getElementById(\"countbadge\");\r\n            let itemcount2 = document.getElementById(\"itemcount\");\r\n\r\n            itemcount1.innerHTML = 0;\r\n            itemcount2.innerHTML = 0;\r\n            itemcount2.classList.add(\"hidden\");\r\n\r\n            // Make sure addtocartbutton active againe once the item is removed from the shopping cart.\r\n            const addtocartbutton = document.querySelectorAll('[id^=btn-].disabled');\r\n            addtocartbutton.forEach(btn => {\r\n                if (btn) {\r\n                    btn.classList.remove('disabled');\r\n                }\r\n            });\r\n        },\r\n        fail: function(ex) {\r\n            // eslint-disable-next-line no-console\r\n            console.log(ex);\r\n        },\r\n    }]);\r\n};\r\n\r\nexport const deleteItem = (id, component, userid) => {\r\n\r\n    Ajax.call([{\r\n        methodname: \"local_shopping_cart_delete_item\",\r\n        args: {\r\n            'itemid': id,\r\n            'component': component,\r\n            'userid': userid\r\n        },\r\n        done: function() {\r\n\r\n            // We might display the item more often than once.\r\n            let items = document.querySelectorAll('#item-' + component + '-' + id);\r\n\r\n            items.forEach(item => {\r\n                if (item) {\r\n                    item.remove();\r\n                }\r\n            });\r\n\r\n            updateTotalPrice(userid);\r\n\r\n            let itemcount1 = document.getElementById(\"countbadge\");\r\n            let itemcount2 = document.getElementById(\"itemcount\");\r\n\r\n            itemcount1.innerHTM = itemcount1.innerHTML > 0 ? itemcount1.innerHTML -= 1 : itemcount1.innerHTML;\r\n            itemcount2.innerHTML = itemcount2.innerHTML > 0 ? itemcount2.innerHTML -= 1 : itemcount1.innerHTML;\r\n\r\n            // If we have only one item left, we set back the expiration date.\r\n            if (itemcount2.innerHTML == 0) {\r\n                itemcount2.classList.add(\"hidden\");\r\n\r\n                // We clear the countdown and set back the timer.\r\n                clearInterval(interval);\r\n                initTimer();\r\n            }\r\n\r\n            // Make sure addtocartbutton active againe once the item is removed from the shopping cart.\r\n            const addtocartbutton = document.querySelector('#btn-' + component + '-' + id);\r\n            if (addtocartbutton) {\r\n                addtocartbutton.classList.remove('disabled');\r\n                buttoninit(id, component);\r\n            }\r\n        },\r\n        fail: function(ex) {\r\n            // eslint-disable-next-line no-console\r\n            console.log(id, ex);\r\n            let item = document.querySelector('#item-' + component + '-' + id);\r\n            if (item) {\r\n                item.remove();\r\n                let itemcount1 = document.getElementById(\"countbadge\");\r\n                let itemcount2 = document.getElementById(\"itemcount\");\r\n                itemcount1.innerHTML = itemcount1.innerHTML > 0 ? itemcount1.innerHTML -= 1 : itemcount1.innerHTML;\r\n                itemcount2.innerHTML = itemcount2.innerHTML > 0 ? itemcount2.innerHTML -= 1 : itemcount1.innerHTML;\r\n                itemcount2.innerHTML = itemcount2.innerHTML == 0 ? itemcount2.classList.add(\"hidden\") : itemcount2.innerHTML;\r\n                let itemprice = item.dataset.price;\r\n\r\n                // eslint-disable-next-line no-console\r\n                console.log('itemprice', itemprice);\r\n\r\n                updateTotalPrice(userid);\r\n            }\r\n        },\r\n    }]);\r\n};\r\n\r\nexport const addItem = (id, component) => {\r\n\r\n    const oncashier = window.location.href.indexOf(\"cashier.php\");\r\n\r\n    let userid = 0;\r\n    if (oncashier > 0) {\r\n        userid = -1;\r\n    }\r\n\r\n    Ajax.call([{\r\n        methodname: \"local_shopping_cart_add_item\",\r\n        args: {\r\n            'component': component,\r\n            'itemid': id,\r\n            'userid': userid\r\n        },\r\n        done: function(data) {\r\n            data.component = component;\r\n            data.id = id;\r\n            data.userid = data.buyforuser; // For the mustache template, we need to obey structure.\r\n\r\n            if (data.success != 1) {\r\n                Notification.addNotification({\r\n                    message: \"Cart is full\",\r\n                    type: \"danger\"\r\n                });\r\n                setTimeout(() => {\r\n                    let notificationslist = document.querySelectorAll('#user-notifications div.alert.alert-danger');\r\n                    const notificatonelement = notificationslist[notificationslist.length - 1];\r\n                    notificatonelement.remove();\r\n                }, 5000);\r\n                return;\r\n            } else if (data.success == 1) {\r\n                Notification.addNotification({\r\n                    message: data.itemname + \" added to cart\",\r\n                    type: \"success\"\r\n                });\r\n\r\n                setTimeout(() => {\r\n                    let notificationslist = document.querySelectorAll('#user-notifications div.alert.alert-success');\r\n\r\n                    const notificatonelement = notificationslist[notificationslist.length - 1];\r\n\r\n                    notificatonelement.remove();\r\n                }, 5000);\r\n\r\n                Templates.renderForPromise('local_shopping_cart/shopping_cart_item', data).then(({html}) => {\r\n                    let lastElements = document.querySelectorAll(\"[id^='liinitialtotal']\");\r\n                    lastElements.forEach(lastElem => {\r\n\r\n                        // eslint-disable-next-line no-console\r\n                        console.log('found li', lastElem);\r\n\r\n                        // If we buy for a user, we only want to interact with the cashiers section.\r\n                        if ((data.buyforuser == 0)\r\n                            || (lastElem.id === \"liinitialtotal_cashier\")) {\r\n                            lastElem.insertAdjacentHTML('beforeBegin', html);\r\n                        }\r\n                    });\r\n\r\n                    // Make sure addtocartbutton is disabled once the item is in the shopping cart.\r\n                    const addtocartbutton = document.querySelector('#btn-' + component + '-' + data.itemid);\r\n                    if (addtocartbutton) {\r\n                        addtocartbutton.classList.add('disabled');\r\n                        addtocartbutton.removeEventListener('click', deleteEvent);\r\n                    }\r\n\r\n                    let items = document.querySelectorAll('#item-' + component + '-' + data.itemid + ' .fa-trash-o');\r\n                    items.forEach(item => {\r\n                        addDeleteevent(item, data.userid);\r\n                    });\r\n\r\n                    updateTotalPrice(data.userid);\r\n\r\n                    // If we buy for a user, we don't have to do the navbar stuff below.\r\n                    if (data.buyforuser != 0) {\r\n                        return;\r\n                    }\r\n                    document.getElementById(\"countbadge\").innerHTML++;\r\n                    const badge = document.getElementById(\"itemcount\");\r\n                    badge.innerHTML = (parseInt(badge.innerHTML) || 0) + 1;\r\n                    badge.classList.remove('hidden');\r\n                    updateTotalPrice(data.userid);\r\n                    clearInterval(interval);\r\n                    initTimer(data.expirationdate);\r\n                    return;\r\n                }).catch((e) => {\r\n                    // eslint-disable-next-line no-console\r\n                    console.log(e);\r\n                });\r\n            }\r\n        },\r\n        fail: function(ex) {\r\n            // eslint-disable-next-line no-console\r\n            console.log('error', ex);\r\n        }\r\n    }], true);\r\n};\r\n\r\n/**\r\n *\r\n * @param {*} userid\r\n * @param {*} usecredit\r\n */\r\nexport const updateTotalPrice = (userid = 0, usecredit = true) => {\r\n\r\n    // eslint-disable-next-line no-console\r\n    console.log('updatetotalprice');\r\n\r\n    // First, get the state of usecredit.\r\n    const oncashier = window.location.href.indexOf(\"cashier.php\");\r\n\r\n    let labelareas = null;\r\n    if (oncashier > 0) {\r\n        labelareas = document.querySelectorAll('div.sc_price_label');\r\n    } else {\r\n        labelareas = document.querySelectorAll('li.sc_price_label');\r\n    }\r\n\r\n    labelareas.forEach(element => {\r\n\r\n        // eslint-disable-next-line no-console\r\n        console.log(element);\r\n\r\n        // First we update the userid, if possible.\r\n        userid = element.dataset.userid ? element.dataset.userid : userid;\r\n\r\n        const checkbox = element.querySelector('input.usecredit-checkbox');\r\n\r\n        if (checkbox) {\r\n            if (checkbox.checked) {\r\n\r\n                // eslint-disable-next-line no-console\r\n                console.log('checked', checkbox.checked);\r\n                usecredit = checkbox.checked;\r\n            } else {\r\n                usecredit = 0;\r\n            }\r\n        }\r\n    });\r\n\r\n    usecredit = usecredit ? 1 : 0;\r\n\r\n    // eslint-disable-next-line no-console\r\n    console.log('usecredit before ajax', usecredit);\r\n\r\n    Ajax.call([{\r\n        methodname: \"local_shopping_cart_get_price\",\r\n        args: {\r\n            userid,\r\n            usecredit\r\n        },\r\n        done: function(data) {\r\n\r\n            // eslint-disable-next-line no-console\r\n            console.log(data);\r\n\r\n            // We take the usecredit value we receive from the server.\r\n            if (data.usecredit == 1) {\r\n                data.usecreditclass = 'checked';\r\n            } else {\r\n                data.usecreditclass = '';\r\n            }\r\n\r\n            const initialtotal = data.initialtotal;\r\n\r\n            let shoppingcart = document.querySelector('#shopping_cart-cashiers-cart');\r\n            let cashierssection = null;\r\n            let checkoutcart = null;\r\n            let checkouttotals = null;\r\n\r\n            if (!shoppingcart) {\r\n                shoppingcart = document.querySelector('#nav-shopping_cart-popover-container');\r\n                checkoutcart = document.querySelector('div.checkoutgrid.checkout');\r\n                // eslint-disable-next-line no-console\r\n                console.log('1', checkoutcart);\r\n            } else {\r\n                cashierssection = document.querySelector('#shopping_cart-cashiers-section');\r\n            }\r\n\r\n            let totals = [];\r\n            if (cashierssection) {\r\n                totals = cashierssection.querySelectorAll('.initialtotal');\r\n            } else {\r\n                // First we add the total price from navbar.\r\n                totals = shoppingcart.querySelectorAll('.initialtotal');\r\n\r\n                // If we are on the checkout site, we deal with the totals there separately.\r\n                if (checkoutcart) {\r\n                    checkouttotals = checkoutcart.querySelectorAll('.initialtotal');\r\n\r\n                    if (checkouttotals) {\r\n                        checkouttotals.forEach(total => {\r\n                            total.innerHTML = initialtotal;\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            let paymentbutton = document.querySelector(\".shopping_cart_payment_region button\");\r\n\r\n            if (paymentbutton) {\r\n\r\n                const price = data.price;\r\n                const currency = data.currency;\r\n\r\n                // eslint-disable-next-line no-console\r\n                console.log(\"paymentbutton\", price, currency);\r\n\r\n                paymentbutton.dataset.cost = price + \" \" + currency;\r\n\r\n                if (price == 0) {\r\n                    // eslint-disable-next-line no-console\r\n                    console.log('price is 0');\r\n                    paymentbutton.addEventListener('click', dealWithZeroPrice);\r\n                } else {\r\n                    // eslint-disable-next-line no-console\r\n                    console.log('price is not 0');\r\n                    paymentbutton.removeEventListener('click', dealWithZeroPrice);\r\n                }\r\n            }\r\n\r\n            // Run through the list of total prices and set them to the right one.\r\n            totals.forEach(total => {\r\n                total.innerHTML = initialtotal;\r\n            });\r\n\r\n            data.checkboxid = Math.random().toString(36).slice(2, 5);\r\n\r\n            Templates.renderForPromise('local_shopping_cart/price_label', data).then(({html}) => {\r\n                labelareas.forEach(element => {\r\n                    // First, clean all children.\r\n                    let child = element.lastElementChild;\r\n                    while (child) {\r\n                        element.removeChild(child);\r\n                        child = element.lastElementChild;\r\n                    }\r\n                    element.insertAdjacentHTML(\"afterbegin\", html);\r\n\r\n                    const checkbox = element.querySelector('input.usecredit-checkbox');\r\n\r\n                    if (checkbox) {\r\n                        checkbox.addEventListener('change', event => {\r\n\r\n                            // eslint-disable-next-line no-console\r\n                            console.log(event);\r\n\r\n                            updateTotalPrice(userid);\r\n                        });\r\n                    }\r\n\r\n                });\r\n                return true;\r\n            }).catch((e => {\r\n                // eslint-disable-next-line no-console\r\n                console.log(e);\r\n            }));\r\n\r\n        },\r\n        fail: function(ex) {\r\n            // eslint-disable-next-line no-console\r\n            console.log('error', ex);\r\n        }\r\n    }], true);\r\n};\r\n\r\n/**\r\n *\r\n * @param {*} event\r\n */\r\nfunction dealWithZeroPrice(event) {\r\n\r\n    // eslint-disable-next-line no-console\r\n    console.log('onlymyclickcounts');\r\n\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        // eslint-disable-next-line no-console\r\n        console.log('onlymyclickcounts', event.target);\r\n\r\n        confirmZeroPriceCheckoutModal(event.target);\r\n}\r\n\r\n/**\r\n * Delete Event.\r\n * @param {HTMLElement} item\r\n * @param {int} userid\r\n */\r\nfunction addDeleteevent(item, userid = 0) {\r\n    if (userid != 0) {\r\n        item.dataset.userid = userid;\r\n    }\r\n    item.addEventListener('click', deleteEvent);\r\n}\r\n\r\n/**\r\n * Function called in listener,\r\n * @param {HTMLElement} item\r\n */\r\nfunction deleteEvent() {\r\n\r\n        const item = this;\r\n        // eslint-disable-next-line no-console\r\n        console.log('item', item);\r\n        // Item comes as #item-booking-213123.\r\n        const idarray = item.dataset.id.split('-');\r\n\r\n        // eslint-disable-next-line no-console\r\n        console.log('idarray', idarray);\r\n        // First pop gets the id.\r\n        const id = idarray.pop();\r\n        // Second pop gets the component.\r\n        const component = idarray.pop();\r\n        let userid = parseInt(item.dataset.userid);\r\n\r\n        if (!userid) {\r\n            userid = 0;\r\n        }\r\n\r\n        deleteItem(id, component, userid);\r\n    }\r\n\r\n/**\r\n * Start the timer.\r\n *\r\n * @param {integer} duration\r\n * @param {integer} display\r\n */\r\nfunction startTimer(duration, display) {\r\n\r\n    var timer = duration,\r\n                minutes,\r\n                seconds;\r\n    interval = setInterval(function() {\r\n\r\n        minutes = parseInt(timer / 60, 10);\r\n        seconds = parseInt(timer % 60, 10);\r\n\r\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n        display.textContent = minutes + \":\" + seconds;\r\n\r\n        if (--timer < 0) {\r\n            deleteAllItems();\r\n\r\n            clearInterval(interval);\r\n        }\r\n    }, 1000);\r\n}\r\n\r\n\r\n/**\r\n * Initialize Timer.\r\n *\r\n * @param {integer} expirationdate\r\n *\r\n */\r\nfunction initTimer(expirationdate = null) {\r\n    if (interval) {\r\n        clearInterval(interval);\r\n    }\r\n    let delta = 0;\r\n    let now = Date.now('UTC');\r\n    now = (new Date()).getTime() / 1000;\r\n    if (expirationdate) {\r\n        delta = (expirationdate - now);\r\n    }\r\n    if (delta <= 0) {\r\n        delta = 0;\r\n        countdownelement.classList.add(\"hidden\");\r\n    } else if (delta > 0) {\r\n        countdownelement.classList.remove(\"hidden\");\r\n        startTimer(delta, countdownelement);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} element\r\n */\r\n function confirmZeroPriceCheckoutModal(element) {\r\n\r\n    getStrings([\r\n        {key: 'confirmzeropricecheckouttitle', component: 'local_shopping_cart'},\r\n        {key: 'confirmzeropricecheckoutbody', component: 'local_shopping_cart'},\r\n        {key: 'confirmzeropricecheckout', component: 'local_shopping_cart'}\r\n    ]\r\n    ).then(strings => {\r\n\r\n        ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL}).then(modal => {\r\n\r\n            modal.setTitle(strings[0]);\r\n                modal.setBody(strings[1]);\r\n                modal.setSaveButtonText(strings[2]);\r\n                modal.getRoot().on(ModalEvents.save, function() {\r\n\r\n                    const userid = element.dataset.userid;\r\n\r\n                    // eslint-disable-next-line no-console\r\n                    console.log(userid);\r\n\r\n                    if (userid) {\r\n                        confirmPayment(userid);\r\n                    }\r\n                });\r\n\r\n                modal.show();\r\n                return modal;\r\n        }).catch(e => {\r\n            // eslint-disable-next-line no-console\r\n            console.log(e);\r\n        });\r\n        return true;\r\n    }).catch(e => {\r\n        // eslint-disable-next-line no-console\r\n        console.log(e);\r\n    });\r\n}"],"names":["countdownelement","interval","visbilityevent","reloadAllButtons","document","querySelectorAll","forEach","button","classList","remove","buttoninit","id","component","number","split","pop","addtocartbutton","querySelector","dataset","initialized","shoppingcart","add","addEventListener","event","console","log","contains","preventDefault","stopPropagation","addItem","expirationdate","initTimer","item","addDeleteevent","visibilityState","reinit","updateTotalPrice","call","methodname","args","done","data","renderForPromise","then","_ref","html","insertAdjacentHTML","items","itemid","itemcomponent","itemcount","getElementById","innerHTML","count","catch","e","fail","ex","deleteAllItems","itemcount1","itemcount2","btn","deleteItem","userid","innerHTM","clearInterval","itemprice","price","window","location","href","indexOf","buyforuser","success","addNotification","message","type","setTimeout","notificationslist","length","itemname","_ref2","lastElem","removeEventListener","deleteEvent","badge","parseInt","usecredit","oncashier","labelareas","element","checkbox","checked","usecreditclass","initialtotal","cashierssection","checkoutcart","checkouttotals","totals","total","paymentbutton","currency","cost","dealWithZeroPrice","checkboxid","Math","random","toString","slice","_ref3","child","lastElementChild","removeChild","target","key","strings","create","ModalFactory","types","SAVE_CANCEL","modal","setTitle","setBody","setSaveButtonText","getRoot","on","ModalEvents","save","show","this","idarray","startTimer","duration","display","minutes","seconds","timer","setInterval","textContent","delta","now","Date","getTime"],"mappings":"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"}